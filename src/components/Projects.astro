---
import GitHub from "./icons/GitHub.astro"
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"

const TAGS = {
  PYTHON: {
    name: "Python",
    class: "bg-[#3776ab] text-white",
    icon: NextJS,
  },
  PYTORCH: {
    name: "PyTorch",
    class: "bg-[#ee4c2c] text-white",
    icon: NextJS,
  },
  JUPYTER: {
    name: "Jupyter",
    class: "bg-[#f37626] text-white",
    icon: NextJS,
  },
  ML: {
    name: "Machine Learning",
    class: "bg-[#ff6b6b] text-white",
    icon: NextJS,
  },
  CV: {
    name: "Computer Vision",
    class: "bg-[#4ecdc4] text-white",
    icon: NextJS,
  },
  HTML: {
    name: "HTML/CSS",
    class: "bg-[#e34c26] text-white",
    icon: NextJS,
  },
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
}
const PROJECTS = [
  {
    title: "SuperMask - Generación de super-máscaras en Redes Neuronales",
    description:
      "TFG sobre generación de super-máscaras mediante computación evolutiva. Implementación de algoritmos genéticos para optimizar arquitecturas de redes neuronales. Desarrollo con Python, PyTorch y técnicas de pruning avanzadas.",
    github: "https://github.com/cabamarcos/SuperMask",
    image: "/projects/svgl.webp",
    tags: [TAGS.PYTHON, TAGS.PYTORCH, TAGS.ML],
  },
  {
    title: "Urban Route Optimization - Navegación Urbana Inteligente",
    description:
      "TFM: Sistema inteligente de navegación urbana basado en visión artificial y penalizaciones dinámicas. Implementación de algoritmos de optimización de rutas combinando computer vision y machine learning para navegación autónoma en entornos urbanos complejos.",
    github: "https://github.com/GabiGR67/urban_route_optimization",
    image: "/projects/adventjs.webp",
    tags: [TAGS.PYTHON, TAGS.CV, TAGS.ML],
  },
  {
    title: "GANs Experimentation - Redes Generativas Adversariales",
    description:
      "Proyecto universitario sobre experimentación con GANs. Implementación y comparación de diferentes arquitecturas de redes generativas. Análisis de resultados y optimización de hiperparámetros para generación de imágenes.",
    github: "https://github.com/cabamarcos/GANs_experimentation",
    image: "/projects/adventjs.webp",
    tags: [TAGS.PYTHON, TAGS.JUPYTER, TAGS.ML],
  },
  {
    title: "Skin Cancer Classifier - Clasificador de Cáncer de Piel",
    description:
      "Sistema de clasificación de cáncer de piel utilizando deep learning. Entrenamiento de modelos CNN para detección automática de lesiones cutáneas. Proyecto con aplicación médica real usando técnicas de visión artificial.",
    github: "https://github.com/cabamarcos/Skin_cancer_classifier",
    image: "/projects/svgl.webp",
    tags: [TAGS.PYTHON, TAGS.PYTORCH, TAGS.ML],
  },
  {
    title: "MyChatBot - Chatbot de IA sin Backend",
    description:
      "Chatbot de inteligencia artificial gratuito que funciona completamente en el frontend. Implementación sin necesidad de backend propio, integración con APIs de IA. Interfaz moderna y responsive para una experiencia de usuario óptima.",
    github: "https://github.com/cabamarcos/MyChatBot",
    link: "https://cabamarcos.github.io/MyChatBot/",
    image: "/projects/adventjs.webp",
    tags: [TAGS.HTML, TAGS.PYTHON],
  },
  {
    title: "VideoFlix - Plataforma de Video con Control Remoto",
    description:
      "Aplicación web que puede ser utilizada con un control remoto. Interfaz intuitiva para navegación de contenido multimedia. Desarrollo frontend con HTML, CSS y JavaScript, optimizada para experiencia de usuario con dispositivos remotos.",
    github: "https://github.com/cabamarcos/VideoFlix",
    link: "https://cabamarcos.github.io/VideoFlix/",
    image: "/projects/svgl.webp",
    tags: [TAGS.HTML],
  },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, github, link }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Recién llegado vs 5 años en Nueva Zelanda" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



